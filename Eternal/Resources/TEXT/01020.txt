-- precipitation constants
CollectionsUsed = { 26 }
precipitation_collection = 26
precipitation_sequence = 21
precipitation_gravity = 1/4
precipitation_wind = 0

names = "jjaro"

function build_pool()
	Level._pool = {}
	for i=1,precipitation_count do
		local x, y, z, p, t = uniform.xyz_in_triangle_list(Level._triangles)
		local e = Ephemera.new(x, y, z, p, precipitation_collection, precipitation_sequence, 0)
		e._triangle = t
		table.insert(Level._pool, e)
	end
end

Triggers = {}

function precipitationpoly(p)
	if p.ceiling.transfer_mode == "landscape" and p.ceiling.texture_index ~= 2 then
		return true
	else
		return false
	end
end

function Triggers.got_item(type, player)
	Global:got_item(type, player)
end

function Triggers.monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
	Global:monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
	Global:player_damaged_dream(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile) -- dream version
end

function Triggers.player_killed(player, aggressor_player, action, projectile)
	Global:player_killed(player, aggressor_player, action, projectile)
end

function Triggers.player_revived(p)
	-- the next three levels have no ammo sources besides secrets, and the next level dumps them straight into lava, so give them ammo and 3x on revival
	Global:player_revived(p, 21, 21, 21, 21, 21, 0, 450)
end

function Triggers.terminal_enter(t, p)
	Global:terminal_enter(t, p)
	if t == 0 then
		for p in Players() do
			if not p.dead then
				if p.life < 450 then
					p.life = 450 -- we'll just give them an additional health boost because the next level starts them directly over lava
					p:fade_screen("green")
					p:play_sound("got powerup")
				end
			end
		end
	end
end

function Triggers.terminal_exit(t, p)
	Global:terminal_exit(t, p)
end

function Triggers.init(restoring)
	Global:initialize(restoring, 21, 21, 21, 21, 21, 0, 450)
	Global:initprecipitation(512)
	Level.stash["names"] = "jjaro"
	Level.stash["ignore"] = "28"

	if not restoring or Level.stash["FAIL"] == "TRUE" then
		-- suffocation/teleportation constants
		Level._playersuff = -10
		Level._monstersuff1 = -1
		Level._monstersuff2 = -2
		Level._teleportpoly = 2005

		-- fog/lightning variables
		Level._fogtimer = 420
		Level._brightness = .125
		Level._thundertimer = 0
		Level._depth = 42
		Level._darken = false
	end

	if not restoring then
		for p in Players() do
			if not p.dead then
				if p.life < 450 then
					p.life = 450 -- the next level dumps the player into lava, so give them some health
					p:play_sound("got powerup")
					p:fade_screen("green")
				end
			end
		end
	end

	-- set display title for HUD
	Level.stash["maintitle"] = "The World Is Hollow"
	Level.stash["subtitle"] = string.format("Terra est in%cnis et vacua", 135)
end

function Triggers.idle()
	Global:idleprecipitation()
	Global:successdream(Level._playersuff, Level._monstersuff1, Level._monstersuff2, Level._teleportpoly)
	Global:purplelightning(10)
end

function Triggers.cleanup()
	Global:cleanup()
end

-- Incorporates scripting by Gregory Smith (precipitation), Aaron Freed (fog/lightning effects), and others
