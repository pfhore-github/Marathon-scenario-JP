-- precipitation constantsCollectionsUsed = { 24 }precipitation_collection = 24precipitation_sequence = 18precipitation_gravity = .03precipitation_wind = .01function suffocate() -- may instead teleport players to the secret credit terminal. resembles Global:successdream(), but differs enough to be a separate function	for p in Players() do		Global:map_overlays(p)		if not p.dead then			if p.polygon.floor.transfer_mode == "landscape" and p.polygon.floor.collection == 30 and p.polygon.floor.texture_index == 1 then				if p.z < Level._playersuff then					if secretfound then						if not p._teleport then							p:teleport(Level._teleportpoly)							p._teleport = true -- if we keep sending teleport instructions every tick, they'll never actually teleport - this way, they will							if p.life < 450 and not p.dead then								p.life = 450								p:play_sound("got powerup")							end						end					elseif #Players == 1 then -- if there's only one player, we'll just kill them						p:damage(7,"suffocation")					else						if p.items["uplink chip"] > 0 then -- if there's more than one player, and they have an uplink chip...							if not p._teleport then								-- ...we'll first strip their weapons and ammo, because this should cost them a bit...								p.items["pistol"] = 0								p.items["pistol ammo"] = 0								p.items["fusion pistol"] = 0								p.items["assault rifle"] = 0								p.items["assault rifle ammo"] = 0								p.items["assault rifle grenades"] = 0								p.items["missile launcher"] = 0								p.items["missile launcher ammo"] = 0								p.items["alien weapon"] = 0								p.items["flamethrower"] = 0								p.items["flamethrower ammo"] = 0								p.items["shotgun"] = 0								p.items["shotgun ammo"] = 0								p.items["smg"] = 0								p.items["smg ammo"] = 0								-- ...and now we'll kill them and teleport them to the start point so they don't lock everyone's game								p:damage(32767, "fusion")								p:teleport(Level._startpoly)								p._teleport = true							end						else -- if there's more than one player, and they don't have an uplink chip, still kill the player							p:damage(7,"suffocation")						end					end				else					p._teleport = false -- not setting this can cause issues with saved games and such				end			elseif p.polygon.floor.transfer_mode == "landscape" and p.polygon.floor.collection == 30 and p.polygon.floor.texture_index == 2 then				Global:drainoxygen(p, 2)			end		elseif #Players > 1 then			if p.polygon.floor.transfer_mode == "landscape" and p.polygon.floor.collection == 30 and p.polygon.floor.texture_index == 1					and p.z < Level._playersuff and p.items["uplink chip"] > 0 then -- if it's a network game, they're _already_ dead, and they have a chip...				if not p._teleport then					p:teleport(Level._startpoly) -- ... then we'll just teleport them back to the start of the level so they don't strand the chip					p._teleport = true				end			end			Global:checkrevival(p)		end		Global:loadfailure_player(p)	end	for m in Monsters() do		if not m.player then			if m.type ~= "minor juggernaut" and m.type ~= "major juggernaut" and m.type ~= "minor drone" and m.type ~= "major drone"					and m.type ~= "big minor drone" and m.type ~= "big major drone" and m.type~="tiny bob" and m.type ~="tiny yeti" then			-- exclude flying monsters from suffocation deaths				if not m.dead then					if m.z < Level._monstersuff2 then						m:damage(12,"suffocation") -- monster below major suffocation constant - kill faster					elseif m.z < Level._monstersuff1 then						m:damage(4,"suffocation") -- monster between minor and major suffocation constants - kill slower					end				end				if m.z < Level._monstersuff2 then					m.external_velocity = 0 -- stop monster from flying off at comically fast velocity due to suffocation damage				end			elseif m.z < Level._monstersuff2 and not m.dead then -- stop flying monsters from moving below a certain point				if m.life > 0 then					m:position(m.x, m.y, Level._monstersuff2, m.polygon)				end				m.external_velocity = 0 -- again, stop monster from flying off			end		end	endendfunction precipitationpoly(p)	if p.ceiling.transfer_mode == "landscape" and p.ceiling.collection == 30 and p.ceiling.texture_index == 1 then		return true	else		return false	endendTriggers = {}function Triggers.got_item(type, player)	Global:got_item(type, player)endfunction Triggers.monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)	Global:monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)endfunction Triggers.player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)	Global:player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)endfunction Triggers.player_killed(player, aggressor_player, action, projectile)	Global:player_killed(player, aggressor_player, projectile)endfunction Triggers.player_revived(p)	Global:player_revived(p, 21, 0, 0, 0, 0, 21, 450) 	-- give players some extra ammo and health on revival, since the drops are currently sparseendfunction Triggers.terminal_enter(t, p)	Global:terminal_enter(t, p)endfunction Triggers.platform_activated(poly)	if poly.z > 27 then		secretfound = true -- this platform only activates if the player hits the secret switch; the secret becomes accessible once it does	endendfunction Triggers.init(restoring)	Global:initialize(restoring, 21, 0, 0, 0, 0, 21, 450) -- give players some extra ammo and health on a vid start, since the drops are currently sparse	Global:initprecipitation(512)	Global:goals()	Level.stash["names"] = "jjaro"	Level.stash["ignore"] = "28"	if not restoring or Level.stash["FAIL"] == "TRUE" then		-- suffocation/teleportation constants		Level._playersuff = -10		Level._monstersuff1 = -1		Level._monstersuff2 = -2		Level._teleportpoly = 2005		Level._startpoly = 547	end	-- secret terminal setup	secretfound = false	for p in Platforms() do		if p.active and not p.initially_active and p.height > 27 then			secretfound = true -- this platform only activates if the player has found the secret; the secret becomes accessible once it does		end	end	-- set display title for HUD	Level.stash["maintitle"] = "Where Giants Have Fallen"	Level.stash["subtitle"] = "Ubínam gigantés cecidérunt"endfunction Triggers.idle()	Global:idleprecipitation()	suffocate()endfunction Triggers.cleanup()	Global:cleanup()end