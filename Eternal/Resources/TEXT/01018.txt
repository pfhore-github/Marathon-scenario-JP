precipitation_collection = 26
precipitation_sequence = 21
precipitation_gravity = 1/4
precipitation_wind = 0

Triggers = {}

function precipitationpoly(p)
	if p.ceiling.transfer_mode == "landscape" and p.ceiling.collection == 28 and p.ceiling.texture_index == 1 then
		return true
	else
		return false
	end
end

function Triggers.got_item(type, player)
	Global:got_item(type, player)
end

function Triggers.monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
	Global:monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
	Global:player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_killed(player, aggressor_player, action, projectile)
	Global:player_killed(player, aggressor_player, action, projectile)
end

function Triggers.player_revived(p)
	Global:player_revived(p, 7, 0, 0, 0, 0, 0, 150)
end

function Triggers.init(restoring)
	Global:initialize(restoring, 7, 0, 0, 0, 0, 0, 150)
	Global:initprecipitation(384)

	if not restoring or Level.stash["FAIL"] == "TRUE" then
		Level._fogtimer = 420
		Level._brightness = .125
		Level._thundertimer = 0
		Level._depth = 42
		Level._darken = false
	end

	Level.stash["names"] = "physics1"
end

function Triggers.idle()
	Global:idlemain()
	Global:idleprecipitation()
	Global:purplelightning(7)
	Global:monsterconveyor()
	Global:playerconveyor()
	Global:itemconveyor()
end

function Triggers.cleanup()
	Global:cleanup()
end

-- Incorporates scripting by Gregory Smith (precipitation), Aaron Freed (fog/lightning effects, conveyor belt, etc.), and others
