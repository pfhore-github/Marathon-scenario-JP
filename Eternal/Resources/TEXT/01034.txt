Triggers = {}

function disablelights()
	for l in Lights() do
		if l.index >= 26 then
			l.active = false -- turn off all the Cybernetic Junction lights
		end
	end
	leveldone = true -- tell the game to stop checking whether we're done
end

function Triggers.got_item(type, player)
	Global:got_item(type, player)
end

function Triggers.monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
	Global:monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
	Global:player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_killed(player, aggressor_player, action, projectile)
	Global:player_killed(player, aggressor_player, action, projectile)
end

function Triggers.player_revived(p)
	Global:player_revived(p, 7, 0, 0, 0, 0, 0, 150)
end

function Triggers.init(restoring)
	Global:initialize(restoring, 7, 0, 0, 0, 0, 0, 150)
	Level.stash["names"] = "standard"
	Level.stash["ignore"] = "0"

	if Level.calculate_completion_state() == "finished" then -- variable to determine whether our mission is done (don't want to keep checking every tick, or repeatedly turning the lights off)
		disablelights()
	else
		leveldone = false
	end

	-- set display title for HUD
	Level.stash["maintitle"] = string.format("E%cdem, sed aliter", 135)
	Level.stash["subtitle"] = "Likewise, but Differently"
end

function Triggers.idle()
	Global:landscapevacuum()
	if Game.ticks % 150 == 0 and Level.calculate_completion_state() == "finished" and not leveldone then -- if we weren't already done, check every five seconds to see if we're done
		disablelights()
	end
end

function Triggers.cleanup()
	Global:cleanup()
end