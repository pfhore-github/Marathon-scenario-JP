Triggers = {}

function Triggers.got_item(type, player)
	Global:got_item(type, player)
end

function Triggers.monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
	Global:monster_damaged(monster, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
	Global:player_damaged(victim, aggressor_player, aggressor_monster, damage_type, damage_amount, projectile)
end

function Triggers.player_killed(player, aggressor_player, action, projectile)
	Global:player_killed(player, aggressor_player, action, projectile)
end

function Triggers.player_revived(p)
	Global:player_revived(p, 7, 0, 0, 0, 0, 0, 150)
end

function Triggers.init(restoring)
	Global:initialize(restoring, 7, 0, 0, 0, 0, 0, 150)
	Level.stash["names"] = "physics1"

	if not restoring or Level.stash["FAIL"] == "TRUE" then
		Level._fogtimer = 420
		Level._brightness = .125
		Level._thundertimer = 0
		Level._depth = 42
		Level._darken = false
	end

	Global:ch2_rebellion(restoring)
end

function Triggers.idle()
	Global:idlemain()
	Global:purplelightning(7)
	if Game.ticks % 150 == 0 then -- check every five seconds
		if Level.calculate_completion_state() == "finished" then
			Lights[56].active = false -- turn off the annoying siren after completing the level
		end
	end
end

function Triggers.cleanup()
	Global:cleanup()
end